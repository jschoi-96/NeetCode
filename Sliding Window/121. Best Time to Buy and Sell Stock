// Time Complexity: O(n)
// Memory: O(1)

Sol 1) Two Pointer

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int l = 0, r = 1;
        int largest = 0;
        
        while (r < prices.size()){
            if (prices[l] < prices[r]){
                int profit = prices[r] - prices[l];
                largest = max(largest , profit);
            }
            
            else { 
                l = r; // set left pointer to lowest value
            }
            r++;
        }
        return largest;
    }
};

Sol 2) Save minimum Value and Subtract

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int min_price = INT_MAX;
        int result = 0;
        for(int i = 0; i < prices.size(); i++){
            min_price = min(min_price , prices[i]);
            result = max(result , prices[i] - min_price);
        }
        return result;
    }
};
